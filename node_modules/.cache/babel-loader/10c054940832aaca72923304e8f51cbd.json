{"ast":null,"code":"import _objectSpread from \"D:\\\\GitHub\\\\comp4513-assignment1-version-2\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"D:\\\\GitHub\\\\comp4513-assignment1-version-2\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\GitHub\\\\comp4513-assignment1-version-2\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\GitHub\\\\comp4513-assignment1-version-2\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\GitHub\\\\comp4513-assignment1-version-2\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\GitHub\\\\comp4513-assignment1-version-2\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\GitHub\\\\comp4513-assignment1-version-2\\\\my-app\\\\src\\\\components\\\\EditPhotoDetails.js\";\nimport React from 'react';\nimport './EditPhotoDetails.css';\n\nvar EditPhotoDetails =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(EditPhotoDetails, _React$Component);\n\n  function EditPhotoDetails() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EditPhotoDetails);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EditPhotoDetails)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleChange = function (e) {\n      // find the current photo in our photo array\n      var id = _this.props.currentPhoto;\n\n      var photo = _this.props.photos.find(function (p) {\n        return p.id === id;\n      }); // update the photo using these 3 steps ...\n      // 1. make a clone of the current photo object\n\n\n      var clonedPhoto = _objectSpread({}, photo); // 2. update value of field that just changed\n\n\n      clonedPhoto[e.currentTarget.name] = e.currentTarget.value; // 3. tell parent (or above) to update the state for this photo\n\n      _this.props.updatePhoto(_this.props.currentPhoto, clonedPhoto);\n    };\n\n    return _this;\n  }\n\n  _createClass(EditPhotoDetails, [{\n    key: \"render\",\n    value: function render() {\n      var id = this.props.currentPhoto;\n      var imgURL = \"https://storage.googleapis.com/funwebdev-3rd-travel/medium/\"; // just in case, handle missing photos in the props\n\n      if (this.props.photos.length > 0) {\n        // find the object with this id\n        var photo = this.props.photos.find(function (p) {\n          return p.id === id;\n        });\n\n        if (photo != null) {\n          return React.createElement(\"article\", {\n            className: \"details\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 15\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"detailsPhotoBox\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 16\n            },\n            __self: this\n          }, React.createElement(\"form\", {\n            className: \"photoForm\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 17\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            src: imgURL + photo.path,\n            alt: photo.title,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 19\n            },\n            __self: this\n          }), React.createElement(\"label\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 21\n            },\n            __self: this\n          }, \"Title\"), React.createElement(\"input\", {\n            type: \"text\",\n            name: \"title\",\n            value: photo.title,\n            onChange: this.handleChange,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 22\n            },\n            __self: this\n          }), React.createElement(\"label\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 24\n            },\n            __self: this\n          }, \"Description\"), React.createElement(\"input\", {\n            type: \"text\",\n            name: \"title\",\n            value: photo.description,\n            onChange: this.handleChange,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 25\n            },\n            __self: this\n          }), React.createElement(\"div\", {\n            className: \"location\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 27\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 28\n            },\n            __self: this\n          }, React.createElement(\"label\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 29\n            },\n            __self: this\n          }, \"City\"), React.createElement(\"input\", {\n            type: \"text\",\n            name: \"city\",\n            value: photo.city,\n            onChange: this.handleChange,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 30\n            },\n            __self: this\n          }), React.createElement(\"label\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 32\n            },\n            __self: this\n          }, \"Country\"), React.createElement(\"input\", {\n            type: \"text\",\n            name: \"country\",\n            value: photo.country,\n            onChange: this.handleChange,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 33\n            },\n            __self: this\n          })), React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 35\n            },\n            __self: this\n          }, React.createElement(\"label\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36\n            },\n            __self: this\n          }, \"latitude\"), React.createElement(\"input\", {\n            type: \"text\",\n            name: \"latitude\",\n            value: photo.latitude,\n            onChange: this.handleChange,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 37\n            },\n            __self: this\n          }), React.createElement(\"label\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39\n            },\n            __self: this\n          }, \"longitude\"), React.createElement(\"input\", {\n            type: \"text\",\n            name: \"longitude\",\n            value: photo.longitude,\n            onChange: this.handleChange,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 40\n            },\n            __self: this\n          }))))));\n        } else {\n          return React.createElement(\"h1\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50\n            },\n            __self: this\n          }, \"Photo Removed\");\n        }\n      } else {\n        return null;\n      }\n    }\n  }]);\n\n  return EditPhotoDetails;\n}(React.Component);\n\nexport default EditPhotoDetails;","map":{"version":3,"sources":["D:\\GitHub\\comp4513-assignment1-version-2\\my-app\\src\\components\\EditPhotoDetails.js"],"names":["React","EditPhotoDetails","handleChange","e","id","props","currentPhoto","photo","photos","find","p","clonedPhoto","currentTarget","name","value","updatePhoto","imgURL","length","path","title","description","city","country","latitude","longitude","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './EditPhotoDetails.css';\r\n\r\nclass EditPhotoDetails extends React.Component {\r\n    render() {\r\n        const id = this.props.currentPhoto;\r\n        const imgURL = `https://storage.googleapis.com/funwebdev-3rd-travel/medium/`;\r\n\r\n        // just in case, handle missing photos in the props\r\n        if ( this.props.photos.length > 0 ) {\r\n            // find the object with this id\r\n            const photo = this.props.photos.find( p => p.id === id );\r\n            if (photo != null) {\r\n                return(\r\n                    <article className=\"details\">\r\n                        <div className=\"detailsPhotoBox\">\r\n                            <form className=\"photoForm\">\r\n                                {/* <legend>Edit Photo Details</legend> */}\r\n                                <img src={imgURL+photo.path} alt={ photo.title } />\r\n        \r\n                                <label>Title</label>\r\n                                <input type=\"text\" name=\"title\" value={ photo.title } onChange={ this.handleChange } />\r\n    \r\n                                <label>Description</label>\r\n                                <input type=\"text\" name=\"title\" value={ photo.description } onChange={ this.handleChange } />\r\n    \r\n                                <div className=\"location\">\r\n                                    <span>\r\n                                        <label>City</label>\r\n                                        <input type=\"text\" name=\"city\" value={ photo.city } onChange={ this.handleChange } />\r\n                \r\n                                        <label>Country</label>\r\n                                        <input type=\"text\" name=\"country\" value={ photo.country } onChange={ this.handleChange } />\r\n                                    </span>    \r\n                                    <span>\r\n                                        <label>latitude</label>\r\n                                        <input type=\"text\" name=\"latitude\" value={ photo.latitude } onChange={ this.handleChange } />\r\n                \r\n                                        <label>longitude</label>\r\n                                        <input type=\"text\" name=\"longitude\" value={ photo.longitude } onChange={ this.handleChange } />\r\n                                    </span>                           \r\n                                </div>\r\n                                \r\n                            </form>\r\n                        </div>\r\n                    </article>\r\n                );\r\n            } else {\r\n                return (\r\n                        <h1>Photo Removed</h1>\r\n                );\r\n            }\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        // find the current photo in our photo array\r\n        const id = this.props.currentPhoto;\r\n        const photo = this.props.photos.find( p => p.id === id );\r\n\r\n        // update the photo using these 3 steps ...\r\n\r\n        // 1. make a clone of the current photo object\r\n        const clonedPhoto = { ...photo };\r\n\r\n        // 2. update value of field that just changed\r\n        clonedPhoto[e.currentTarget.name] = e.currentTarget.value;\r\n\r\n        // 3. tell parent (or above) to update the state for this photo\r\n        this.props.updatePhoto(this.props.currentPhoto, clonedPhoto);\r\n    }\r\n}\r\n\r\nexport default EditPhotoDetails;"]},"metadata":{},"sourceType":"module"}