{"ast":null,"code":"import _objectSpread from \"D:\\\\GitHub\\\\comp4513-assignment1-version-2\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"D:\\\\GitHub\\\\comp4513-assignment1-version-2\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\GitHub\\\\comp4513-assignment1-version-2\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\GitHub\\\\comp4513-assignment1-version-2\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\GitHub\\\\comp4513-assignment1-version-2\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\GitHub\\\\comp4513-assignment1-version-2\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport React from 'react';\nimport './EditPhotoDetails.css';\n\nvar EditPhotoDetails =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(EditPhotoDetails, _React$Component);\n\n  function EditPhotoDetails() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EditPhotoDetails);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EditPhotoDetails)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleChange = function (e) {\n      // find the current photo in our photo array\n      var id = _this.props.currentPhoto;\n\n      var photo = _this.props.photos.find(function (p) {\n        return p.id === id;\n      }); // update the photo using these 3 steps ...\n      // 1. make a clone of the current photo object\n\n\n      var clonedPhoto = _objectSpread({}, photo); // 2. update value of field that just changed\n\n\n      clonedPhoto[e.currentTarget.name] = e.currentTarget.value; // 3. tell parent (or above) to update the state for this photo\n\n      _this.props.updatePhoto(_this.props.currentPhoto, clonedPhoto);\n    };\n\n    return _this;\n  }\n\n  _createClass(EditPhotoDetails, [{\n    key: \"render\",\n    value: function render() {\n      var id = this.props.currentPhoto;\n      var imgURL = \"https://storage.googleapis.com/funwebdev-3rd-travel/medium/\"; // just in case, handle missing photos in the props\n\n      if (this.props.photos.length > 0) {\n        // find the object with this id\n        var photo = this.props.photos.find(function (p) {\n          return p.id === id;\n        });\n\n        if (photo != null) {}\n      } else {\n        return null;\n      }\n    }\n  }]);\n\n  return EditPhotoDetails;\n}(React.Component);\n\nexport default EditPhotoDetails;","map":{"version":3,"sources":["D:\\GitHub\\comp4513-assignment1-version-2\\my-app\\src\\components\\EditPhotoDetails.js"],"names":["React","EditPhotoDetails","handleChange","e","id","props","currentPhoto","photo","photos","find","p","clonedPhoto","currentTarget","name","value","updatePhoto","imgURL","length","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,wBAAP;;IAEMC,gB;;;;;;;;;;;;;;;;;;UAiBFC,Y,GAAe,UAACC,CAAD,EAAO;AAClB;AACA,UAAMC,EAAE,GAAG,MAAKC,KAAL,CAAWC,YAAtB;;AACA,UAAMC,KAAK,GAAG,MAAKF,KAAL,CAAWG,MAAX,CAAkBC,IAAlB,CAAwB,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACN,EAAF,KAASA,EAAb;AAAA,OAAzB,CAAd,CAHkB,CAKlB;AAEA;;;AACA,UAAMO,WAAW,qBAAQJ,KAAR,CAAjB,CARkB,CAUlB;;;AACAI,MAAAA,WAAW,CAACR,CAAC,CAACS,aAAF,CAAgBC,IAAjB,CAAX,GAAoCV,CAAC,CAACS,aAAF,CAAgBE,KAApD,CAXkB,CAalB;;AACA,YAAKT,KAAL,CAAWU,WAAX,CAAuB,MAAKV,KAAL,CAAWC,YAAlC,EAAgDK,WAAhD;AACH,K;;;;;;;6BA/BQ;AACL,UAAMP,EAAE,GAAG,KAAKC,KAAL,CAAWC,YAAtB;AACA,UAAMU,MAAM,gEAAZ,CAFK,CAIL;;AACA,UAAK,KAAKX,KAAL,CAAWG,MAAX,CAAkBS,MAAlB,GAA2B,CAAhC,EAAoC;AAChC;AACA,YAAMV,KAAK,GAAG,KAAKF,KAAL,CAAWG,MAAX,CAAkBC,IAAlB,CAAwB,UAAAC,CAAC;AAAA,iBAAIA,CAAC,CAACN,EAAF,KAASA,EAAb;AAAA,SAAzB,CAAd;;AACA,YAAIG,KAAK,IAAI,IAAb,EAAmB,CAElB;AACJ,OAND,MAMO;AACH,eAAO,IAAP;AACH;AACJ;;;;EAf0BP,KAAK,CAACkB,S;;AAmCrC,eAAejB,gBAAf","sourcesContent":["import React from 'react';\r\nimport './EditPhotoDetails.css';\r\n\r\nclass EditPhotoDetails extends React.Component {\r\n    render() {\r\n        const id = this.props.currentPhoto;\r\n        const imgURL = `https://storage.googleapis.com/funwebdev-3rd-travel/medium/`;\r\n\r\n        // just in case, handle missing photos in the props\r\n        if ( this.props.photos.length > 0 ) {\r\n            // find the object with this id\r\n            const photo = this.props.photos.find( p => p.id === id );\r\n            if (photo != null) {\r\n\r\n            }\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        // find the current photo in our photo array\r\n        const id = this.props.currentPhoto;\r\n        const photo = this.props.photos.find( p => p.id === id );\r\n\r\n        // update the photo using these 3 steps ...\r\n\r\n        // 1. make a clone of the current photo object\r\n        const clonedPhoto = { ...photo };\r\n\r\n        // 2. update value of field that just changed\r\n        clonedPhoto[e.currentTarget.name] = e.currentTarget.value;\r\n\r\n        // 3. tell parent (or above) to update the state for this photo\r\n        this.props.updatePhoto(this.props.currentPhoto, clonedPhoto);\r\n    }\r\n}\r\n\r\nexport default EditPhotoDetails;"]},"metadata":{},"sourceType":"module"}