{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\GitHub\\\\comp4513-assignment1-version-2\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\GitHub\\\\comp4513-assignment1-version-2\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"D:\\\\GitHub\\\\comp4513-assignment1-version-2\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\GitHub\\\\comp4513-assignment1-version-2\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\GitHub\\\\comp4513-assignment1-version-2\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\GitHub\\\\comp4513-assignment1-version-2\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\GitHub\\\\comp4513-assignment1-version-2\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\GitHub\\\\comp4513-assignment1-version-2\\\\my-app\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport * as cloneDeep from 'lodash/cloneDeep';\nimport { Route } from 'react-router-dom';\nimport PhotoBrowser from './components/PhotoBrowser.js';\nimport Home from './components/Home.js';\nimport About from './components/About.js';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.updatePhoto = function (id, photo) {\n      // Create a deep clone of photo array from state.\n      // We will use a lodash function for that task.\n      var copyPhotos = cloneDeep(_this.state.photos); // find photo to update in cloned array\n\n      var photoToReplace = copyPhotos.find(function (p) {\n        return p.id === id;\n      }); // replace photo fields with edited values\n\n      photoToReplace.title = photo.title;\n      photoToReplace.city = photo.city;\n      photoToReplace.country = photo.country; // update state\n\n      _this.setState({\n        photos: copyPhotos\n      });\n    };\n\n    _this.addPhotoToFavorites = function (id) {\n      // find photo to add\n      var photo = _this.state.photos.find(function (p) {\n        return p.id === id;\n      });\n\n      console.log(photo); // check if item is already in favorite\n      // if not add it\n\n      if (!_this.state.favorites.find(function (p) {\n        return p.id === id;\n      })) {\n        // create copy of favorites\n        var copyFavorites = cloneDeep(_this.state.favorites); // push item into array\n\n        copyFavorites.push(photo); // update state\n\n        _this.setState({\n          favorites: copyFavorites\n        });\n      } else {\n        console.log(\"Photo already in favorites\");\n      }\n    };\n\n    _this.filter = function (name, value) {\n      var temp = cloneDeep(_this.state.photos);\n\n      if (name === \"city\") {\n        if (value !== \"default\") {} else {\n          _this.setState({\n            photos: _this.state.temp\n          });\n        }\n      } else {}\n    };\n\n    _this.state = {\n      photos: [],\n      favorites: [],\n      temp: []\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var url, response, jsonData;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                url = \"http://randyconnolly.com/funwebdev/services/travel/images.php\";\n                _context.next = 4;\n                return fetch(url);\n\n              case 4:\n                response = _context.sent;\n                _context.next = 7;\n                return response.json();\n\n              case 7:\n                jsonData = _context.sent;\n                this.setState({\n                  photos: jsonData\n                });\n                _context.next = 14;\n                break;\n\n              case 11:\n                _context.prev = 11;\n                _context.t0 = _context[\"catch\"](0);\n                console.error(_context.t0);\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 11]]);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"/\",\n        exact: true,\n        component: Home,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/home\",\n        exact: true,\n        component: Home,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/browse\",\n        exact: true,\n        render: function render(props) {\n          return React.createElement(PhotoBrowser, {\n            favorites: _this2.state.favorites,\n            photos: _this2.state.photos,\n            updatePhoto: _this2.updatePhoto,\n            addPhotoToFavorites: _this2.addPhotoToFavorites,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/about\",\n        exact: true,\n        component: About,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["D:\\GitHub\\comp4513-assignment1-version-2\\my-app\\src\\App.js"],"names":["React","Component","cloneDeep","Route","PhotoBrowser","Home","About","App","props","updatePhoto","id","photo","copyPhotos","state","photos","photoToReplace","find","p","title","city","country","setState","addPhotoToFavorites","console","log","favorites","copyFavorites","push","filter","name","value","temp","url","fetch","response","json","jsonData","error"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport * as cloneDeep from 'lodash/cloneDeep';\nimport { Route } from 'react-router-dom';\nimport PhotoBrowser from './components/PhotoBrowser.js';\nimport Home from './components/Home.js';\nimport About from './components/About.js';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { photos: [], favorites: [], temp: [] };\n  }\n\n  async componentDidMount() {\n    try {\n      const url = \"http://randyconnolly.com/funwebdev/services/travel/images.php\";\n      const response = await fetch(url);\n      const jsonData = await response.json();\n      this.setState( { photos: jsonData } );\n    }\n    catch (error) {\n      console.error(error);\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Route path='/' exact component={Home} />\n        <Route path='/home' exact component={Home} />\n        <Route path='/browse' exact \n          render={ (props) => \n          <PhotoBrowser\n            favorites={ this.state.favorites} \n            photos={ this.state.photos } \n            updatePhoto={ this.updatePhoto }  \n            addPhotoToFavorites={ this.addPhotoToFavorites } />\n           }\n        />\n        <Route path='/about' exact component={About} />\n      </div>\n     \n    );\n  }\n\n  updatePhoto = (id, photo) => {\n    // Create a deep clone of photo array from state.\n    // We will use a lodash function for that task.\n    const copyPhotos = cloneDeep(this.state.photos);\n\n    // find photo to update in cloned array\n    const photoToReplace = copyPhotos.find( p => p.id === id);\n\n    // replace photo fields with edited values\n    photoToReplace.title = photo.title;\n    photoToReplace.city = photo.city;\n    photoToReplace.country = photo.country;\n\n    // update state\n    this.setState( { photos: copyPhotos } );\n  }\n\n  addPhotoToFavorites = (id) => {\n    // find photo to add\n    const photo = this.state.photos.find ( p => p.id === id);\n    console.log(photo);\n\n    // check if item is already in favorite\n    // if not add it\n    if (!this.state.favorites.find (p => p.id === id) ) {\n      // create copy of favorites\n      const copyFavorites = cloneDeep(this.state.favorites);\n      \n      // push item into array\n      copyFavorites.push(photo);\n      \n      // update state\n      this.setState( { favorites: copyFavorites });\n    } else {\n      console.log (\"Photo already in favorites\")\n    }\n  }\n\n  filter = (name, value) => {\n    const temp = cloneDeep(this.state.photos)\n\n    if (name === \"city\") {\n      if (value !== \"default\") {\n\n      } else {\n        this.setState({photos: this.state.temp});\n      }\n    } else {\n\n    }\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}