{"ast":null,"code":"import _classCallCheck from \"D:\\\\GitHub\\\\comp4513-assignment1-version-2\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\GitHub\\\\comp4513-assignment1-version-2\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\GitHub\\\\comp4513-assignment1-version-2\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\GitHub\\\\comp4513-assignment1-version-2\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\GitHub\\\\comp4513-assignment1-version-2\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\GitHub\\\\comp4513-assignment1-version-2\\\\my-app\\\\src\\\\components\\\\MapContainer.js\";\nimport React from 'react';\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from 'google-maps-react';\nexport var MapContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MapContainer, _React$Component);\n\n  function MapContainer() {\n    _classCallCheck(this, MapContainer);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MapContainer).apply(this, arguments));\n  }\n\n  _createClass(MapContainer, [{\n    key: \"render\",\n    value: function render() {\n      var imgURL = \"https://storage.googleapis.com/funwebdev-3rd-travel/square-medium/\";\n      return React.createElement(\"div\", {\n        className: \"mapContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8\n        },\n        __self: this\n      }, React.createElement(Map, {\n        className: \"map\",\n        style: {\n          width: '60%',\n          height: '100%',\n          position: 'relative'\n        },\n        google: this.props.google,\n        zoom: 14,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      }, React.createElement(Marker, {\n        onClick: this.onMarkerClick,\n        name: 'Current location',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"details\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"detailsPhotoBox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"photoForm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: imgURL + photo.path,\n        alt: photo.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, photo.title), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, photo.description), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, photo.city, \", \", photo.country), React.createElement(\"button\", {\n        onClick: this.handleEdit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Edit\"), React.createElement(\"button\", {\n        onClick: this.handleMap,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Map\")))));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this = this;\n\n      document.querySelector(\".map\").style.width = \"50%\";\n      document.querySelector(\".map\").style.height = \"95%\"; // check for navigation in browser\n      // if allowed set currentlocations coordinate\n\n      if (navigator && navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(function (pos) {\n          var coords = pos.coords;\n\n          _this.setState({\n            currentLocation: {\n              lat: coords.latitude,\n              lng: coords.longitude\n            }\n          });\n        }, // this will set the state to false when the request for location is block/or denied\n        function (error) {\n          _this.setState({\n            allowLocation: \"false\"\n          });\n        });\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      document.querySelector(\".map\").style.width = \"50%\";\n      document.querySelector(\".map\").style.height = \"95%\";\n    }\n  }]);\n\n  return MapContainer;\n}(React.Component);\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyDKABHgdY2tt-ny_J2y6tG7rPAPZ853Ss4\"\n})(MapContainer);","map":{"version":3,"sources":["D:\\GitHub\\comp4513-assignment1-version-2\\my-app\\src\\components\\MapContainer.js"],"names":["React","Map","InfoWindow","Marker","GoogleApiWrapper","MapContainer","imgURL","width","height","position","props","google","onMarkerClick","photo","path","title","description","city","country","handleEdit","handleMap","document","querySelector","style","navigator","geolocation","getCurrentPosition","pos","coords","setState","currentLocation","lat","latitude","lng","longitude","error","allowLocation","Component","apiKey"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Map, InfoWindow, Marker, GoogleApiWrapper} from 'google-maps-react';\r\n \r\nexport class MapContainer extends React.Component {\r\n  render() {\r\n    const imgURL = `https://storage.googleapis.com/funwebdev-3rd-travel/square-medium/`; \r\n    return (\r\n    <div className=\"mapContainer\">\r\n      <Map className=\"map\" \r\n      style={{width: '60%', height: '100%', position: 'relative'}} \r\n      google={this.props.google} zoom={14}\r\n\r\n      \r\n      >\r\n \r\n        <Marker onClick={this.onMarkerClick}\r\n                name={'Current location'} />\r\n \r\n        {/* <InfoWindow onClose={this.onInfoWindowClose}>\r\n            <div>\r\n              <h1>{this.state.selectedPlace.name}</h1>\r\n            </div>\r\n        </InfoWindow> */}\r\n      </Map>\r\n\r\n      <div className=\"details\">\r\n            <div className=\"detailsPhotoBox\">\r\n                <div className=\"photoForm\">\r\n                    <img src={imgURL+photo.path} alt={photo.title}/>\r\n                    <br></br>\r\n                    <h2>{photo.title}</h2>\r\n                    <p>{photo.description}</p>\r\n                    <p>{photo.city}, {photo.country}</p>\r\n                    <button onClick={this.handleEdit}>Edit</button>\r\n                    <button onClick={this.handleMap}>Map</button>\r\n                </div>\r\n            </div>\r\n      </div>\r\n    </div>\r\n    );\r\n\r\n  }\r\n\r\n    componentDidMount () {\r\n        document.querySelector(\".map\").style.width = \"50%\";\r\n        document.querySelector(\".map\").style.height = \"95%\";\r\n\r\n        // check for navigation in browser\r\n        // if allowed set currentlocations coordinate\r\n        if (navigator && navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition( (pos) => {\r\n                const coords = pos.coords;\r\n                this.setState({\r\n                    currentLocation: {\r\n                        lat: coords.latitude,\r\n                        lng: coords.longitude\r\n                    }\r\n                });\r\n            },\r\n            // this will set the state to false when the request for location is block/or denied\r\n            (error) => {\r\n                this.setState({allowLocation: \"false\"});\r\n            }\r\n\r\n            );\r\n        } \r\n    }\r\n\r\n    componentDidUpdate () {\r\n        document.querySelector(\".map\").style.width = \"50%\";\r\n        document.querySelector(\".map\").style.height = \"95%\";\r\n    }\r\n\r\n}\r\n \r\nexport default GoogleApiWrapper({\r\n  apiKey: (\"AIzaSyDKABHgdY2tt-ny_J2y6tG7rPAPZ853Ss4\")\r\n})(MapContainer)"]},"metadata":{},"sourceType":"module"}