{"ast":null,"code":"import _objectSpread from \"C:\\\\School\\\\Web III\\\\lab20b\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\School\\\\Web III\\\\lab20b\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\School\\\\Web III\\\\lab20b\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\School\\\\Web III\\\\lab20b\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\School\\\\Web III\\\\lab20b\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\School\\\\Web III\\\\lab20b\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\School\\\\Web III\\\\lab20b\\\\my-app\\\\src\\\\components\\\\EditPhotoDetails.js\";\nimport React from 'react';\nimport './EditPhotoDetails.css';\n\nvar EditPhotoDetails =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(EditPhotoDetails, _React$Component);\n\n  function EditPhotoDetails() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EditPhotoDetails);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EditPhotoDetails)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleChange = function (e) {\n      console.log(e.currentTarget.value);\n      console.log(e.currentTarget.name); // find the current photo in our photo array\n\n      var id = _this.props.currentPhoto;\n\n      var photo = _this.props.photos.find(function (p) {\n        return p.id === id;\n      }); // update the photo using 3 steps\n      // 1. Make a clone of the current photo object\n\n\n      var clonedPhoto = _objectSpread({}, photo); // 2. Update value of field that just changed\n\n\n      clonedPhoto[e.currentTarget.name] = e.currentTarget.value;\n      console.log(clonedPhoto); // 3. Tell parent (or above) to update the state for this photo\n\n      _this.props.updatePhoto(_this.props.currentPhoto, clonedPhoto);\n    };\n\n    return _this;\n  }\n\n  _createClass(EditPhotoDetails, [{\n    key: \"render\",\n    value: function render() {\n      console.log(this.props.photos);\n      console.log(this.props.currentPhoto);\n      var id = this.props.currentPhoto;\n      var imgURL = 'https://storage.googleapis.com/funwebdev-3rd-travel/medium/';\n\n      if (this.props.photos.length > 0) {\n        var photo = this.props.photos.find(function (p) {\n          return p.id === id;\n        });\n        console.log(photo);\n        return React.createElement(\"article\", {\n          className: \"details\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"detailsPhotoBox\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, React.createElement(\"form\", {\n          className: \"photoForm\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, React.createElement(\"legend\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, \"Edit Photo Details\"), React.createElement(\"img\", {\n          src: imgURL + photo.path,\n          alt: \"{photo.title}\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, \"Title\"), React.createElement(\"input\", {\n          type: \"text\",\n          name: \"title\",\n          value: photo.title,\n          onChange: this.handleChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, \"City\"), React.createElement(\"input\", {\n          type: \"text\",\n          name: \"city\",\n          value: photo.city,\n          onChange: this.handleChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, \"Country\"), React.createElement(\"input\", {\n          type: \"text\",\n          name: \"country\",\n          value: photo.country,\n          onChange: this.handleChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }))));\n      } else {\n        return null;\n      }\n    }\n  }]);\n\n  return EditPhotoDetails;\n}(React.Component);\n\nexport default EditPhotoDetails;","map":{"version":3,"sources":["C:\\School\\Web III\\lab20b\\my-app\\src\\components\\EditPhotoDetails.js"],"names":["React","EditPhotoDetails","handleChange","e","console","log","currentTarget","value","name","id","props","currentPhoto","photo","photos","find","p","clonedPhoto","updatePhoto","imgURL","length","path","title","city","country","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './EditPhotoDetails.css';\r\n\r\nclass EditPhotoDetails extends React.Component {\r\n\t\r\n\thandleChange = e => {\r\n\t\t\r\n\t\tconsole.log(e.currentTarget.value);\r\n\t\tconsole.log(e.currentTarget.name);\r\n\t\t\r\n\t\t// find the current photo in our photo array\r\n\t\tconst id = this.props.currentPhoto;\r\n\t\tconst photo = this.props.photos.find( p => p.id === id);\r\n\t\t\r\n\t\t// update the photo using 3 steps\r\n\t\t// 1. Make a clone of the current photo object\r\n\t\tconst clonedPhoto = { ...photo };\r\n\t\t\r\n\t\t// 2. Update value of field that just changed\r\n\t\tclonedPhoto[e.currentTarget.name] = e.currentTarget.value;\r\n\t\t\r\n\t\tconsole.log(clonedPhoto);\r\n\t\t\r\n\t\t// 3. Tell parent (or above) to update the state for this photo\r\n\t\t this.props.updatePhoto(this.props.currentPhoto, clonedPhoto);\r\n\t}\r\n\t\r\n\trender() {\r\n\t\t\r\n\t\tconsole.log(this.props.photos);\r\n\t\tconsole.log(this.props.currentPhoto);\r\n\t\tconst id = this.props.currentPhoto;\r\n\t\tconst imgURL = 'https://storage.googleapis.com/funwebdev-3rd-travel/medium/';\r\n\t\tif (this.props.photos.length > 0) {\r\n\t\t\tconst photo = this.props.photos.find( p => p.id === id);\r\n\t\t\tconsole.log(photo);\r\n\t\t\treturn (\r\n\t\t\t\t<article className=\"details\">\r\n\t\t\t\t\t<div className=\"detailsPhotoBox\">\r\n\t\t\t\t\t\t<form className=\"photoForm\">\r\n\t\t\t\t\t\t\t<legend>Edit Photo Details</legend>\r\n\t\t\t\t\t\t\t<img src={imgURL+photo.path} alt=\"{photo.title}\" />\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<label>Title</label>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype='text' \r\n\t\t\t\t\t\t\t\tname='title' \r\n\t\t\t\t\t\t\t\tvalue={photo.title} \r\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<label>City</label>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype='text' \r\n\t\t\t\t\t\t\t\tname='city' \r\n\t\t\t\t\t\t\t\tvalue={photo.city} \r\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<label>Country</label>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype='text' \r\n\t\t\t\t\t\t\t\tname='country' \r\n\t\t\t\t\t\t\t\tvalue={photo.country} \r\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</article>\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default EditPhotoDetails;"]},"metadata":{},"sourceType":"module"}