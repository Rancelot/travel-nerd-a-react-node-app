{"ast":null,"code":"import _classCallCheck from \"D:\\\\GitHub\\\\comp4513-assignment1-version-2\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\GitHub\\\\comp4513-assignment1-version-2\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\GitHub\\\\comp4513-assignment1-version-2\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\GitHub\\\\comp4513-assignment1-version-2\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\GitHub\\\\comp4513-assignment1-version-2\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\GitHub\\\\comp4513-assignment1-version-2\\\\my-app\\\\src\\\\components\\\\MapContainer.js\";\nimport React from 'react';\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from 'google-maps-react';\nexport var MapContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MapContainer, _React$Component);\n\n  function MapContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MapContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MapContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleView = function () {\n      console.log(\"handleView\");\n\n      _this.props.changeRenderView(\"view\");\n    };\n\n    _this.handleEdit = function () {\n      _this.props.changeRenderView(\"edit\");\n    };\n\n    _this.calculateDistance = function (lat1, lon1) {\n      if (_this.state.allowLocation !== \"false\") {\n        var lat2 = _this.state.currentLocation.lat;\n        var lon2 = _this.state.currentLocation.lng;\n        var R = 6371e3; // metres\n\n        var φ1 = _this.toRadians(lat1);\n\n        var φ2 = _this.toRadians(lat2);\n\n        var Δφ = _this.toRadians(lat2 - lat1);\n\n        var Δλ = _this.toRadians(lon2 - lon1);\n\n        var a = Math.sin(Δφ / 2) * Math.sin(Δφ / 2) + Math.cos(φ1) * Math.cos(φ2) * Math.sin(Δλ / 2) * Math.sin(Δλ / 2);\n        var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n        var d = R * c;\n        d = Math.round(d);\n        d = \"Distance from User \" + d + \" (KM)\";\n      } else {\n        d = \"Cannot calculate distance.\";\n      }\n\n      console.log(\"Distance = \" + d);\n      return d;\n    };\n\n    return _this;\n  }\n\n  _createClass(MapContainer, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var imgURL = \"https://storage.googleapis.com/funwebdev-3rd-travel/square-medium/\";\n      var photo = this.props.photos.find(function (obj) {\n        return obj.id === _this2.props.currentPhoto;\n      });\n\n      if (photo != null) {\n        return React.createElement(\"div\", {\n          className: \"mapContainer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 10\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 11\n          },\n          __self: this\n        }, React.createElement(Map, {\n          className: \"map\",\n          style: {\n            width: '500px',\n            height: '900px',\n            position: 'relative'\n          },\n          google: this.props.google,\n          zoom: 14,\n          initialCenter: {\n            lat: Number(photo.latitude),\n            lng: Number(photo.longitude)\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 12\n          },\n          __self: this\n        }, React.createElement(Marker, {\n          onClick: this.onMarkerClick,\n          name: 'Current location',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }))), React.createElement(\"div\", {\n          className: \"mapDetails\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: imgURL + photo.path,\n          alt: photo.title,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }), React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, photo.title), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, photo.description), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, photo.city, \", \", photo.country), React.createElement(\"button\", {\n          onClick: this.handleView,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, \"View\"), React.createElement(\"button\", {\n          onClick: this.handleEdit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, \"Edit\")));\n      } else {\n        return React.createElement(\"div\", {\n          className: \"detailsPhotoBox\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, \"Photo has been removed\"));\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      // document.querySelector(\".map\").style.width = \"50%\";\n      // document.querySelector(\".map\").style.height = \"95%\";\n      // check for navigation in browser\n      // if allowed set currentlocations coordinate\n      if (navigator && navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(function (pos) {\n          var coords = pos.coords;\n\n          _this3.setState({\n            currentLocation: {\n              lat: coords.latitude,\n              lng: coords.longitude\n            }\n          });\n        }, // this will set the state to false when the request for location is block/or denied\n        function (error) {\n          _this3.setState({\n            allowLocation: \"false\"\n          });\n        });\n      }\n    } // componentDidUpdate () {\n    //     document.querySelector(\".map\").style.width = \"50%\";\n    //     document.querySelector(\".map\").style.height = \"95%\";\n    // }\n\n  }]);\n\n  return MapContainer;\n}(React.Component);\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyDKABHgdY2tt-ny_J2y6tG7rPAPZ853Ss4\"\n})(MapContainer);","map":{"version":3,"sources":["D:\\GitHub\\comp4513-assignment1-version-2\\my-app\\src\\components\\MapContainer.js"],"names":["React","Map","InfoWindow","Marker","GoogleApiWrapper","MapContainer","handleView","console","log","props","changeRenderView","handleEdit","calculateDistance","lat1","lon1","state","allowLocation","lat2","currentLocation","lat","lon2","lng","R","φ1","toRadians","φ2","Δφ","Δλ","a","Math","sin","cos","c","atan2","sqrt","d","round","imgURL","photo","photos","find","obj","id","currentPhoto","width","height","position","google","Number","latitude","longitude","onMarkerClick","path","title","description","city","country","navigator","geolocation","getCurrentPosition","pos","coords","setState","error","Component","apiKey"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Map, InfoWindow, Marker, GoogleApiWrapper} from 'google-maps-react';\r\n \r\nexport class MapContainer extends React.Component {\r\n  render() {\r\n    const imgURL = `https://storage.googleapis.com/funwebdev-3rd-travel/square-medium/`;\r\n    let photo = this.props.photos.find((obj) => obj.id === this.props.currentPhoto);\r\n    if (photo != null) {\r\n        return (\r\n            <div className=\"mapContainer\">\r\n              <div>\r\n                <Map className=\"map\" \r\n                style={{width: '500px', height: '900px', position: 'relative'}} \r\n                google={this.props.google} zoom={14}\r\n                initialCenter={{lat: Number(photo.latitude), lng: Number(photo.longitude) }}\r\n                \r\n                \r\n                >\r\n            \r\n                    <Marker onClick={this.onMarkerClick}\r\n                            name={'Current location'} />\r\n            \r\n                    {/* <InfoWindow onClose={this.onInfoWindowClose}>\r\n                        <div>\r\n                        <h1>{this.state.selectedPlace.name}</h1>\r\n                        </div>\r\n                    </InfoWindow> */}\r\n                </Map>\r\n              </div>\r\n        \r\n              <div className=\"mapDetails\">\r\n                    <img src={imgURL+photo.path} alt={photo.title}/>\r\n                    <br></br>\r\n                    <h2>{photo.title}</h2>\r\n                    <p>{photo.description}</p>\r\n                    <p>{photo.city}, {photo.country}</p>\r\n                    <button onClick={this.handleView}>View</button>\r\n                    <button onClick={this.handleEdit}>Edit</button>\r\n              </div>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div className=\"detailsPhotoBox\">\r\n                <h1>Photo has been removed</h1>\r\n            </div>\r\n        );\r\n    }\r\n  }\r\n\r\nhandleView = () => {\r\n    console.log(\"handleView\");\r\n    this.props.changeRenderView(\"view\");\r\n}\r\n\r\nhandleEdit = () => {\r\n    this.props.changeRenderView(\"edit\");\r\n}\r\n\r\n  // code from https://www.movable-type.co.uk/scripts/latlong.html\r\n  calculateDistance = (lat1, lon1) => {\r\n    if (this.state.allowLocation !== \"false\" ) {\r\n        let lat2 = this.state.currentLocation.lat;\r\n        let lon2 = this.state.currentLocation.lng;\r\n\r\n        var R = 6371e3; // metres\r\n        var φ1 = this.toRadians(lat1);\r\n        var φ2 = this.toRadians(lat2);\r\n        var Δφ = this.toRadians(lat2-lat1);\r\n        var Δλ = this.toRadians(lon2-lon1);\r\n\r\n        var a = Math.sin(Δφ/2) * Math.sin(Δφ/2) +\r\n                Math.cos(φ1) * Math.cos(φ2) *\r\n                Math.sin(Δλ/2) * Math.sin(Δλ/2);\r\n        var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\r\n\r\n        var d = R * c;\r\n        d = Math.round(d);\r\n        d = \"Distance from User \" + d + \" (KM)\";\r\n    } else {\r\n        d = \"Cannot calculate distance.\";\r\n    }\r\n\r\n    console.log(\"Distance = \" + d);\r\n    return d;\r\n\r\n}\r\n\r\n    componentDidMount () {\r\n        // document.querySelector(\".map\").style.width = \"50%\";\r\n        // document.querySelector(\".map\").style.height = \"95%\";\r\n\r\n        // check for navigation in browser\r\n        // if allowed set currentlocations coordinate\r\n        if (navigator && navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition( (pos) => {\r\n                const coords = pos.coords;\r\n                this.setState({\r\n                    currentLocation: {\r\n                        lat: coords.latitude,\r\n                        lng: coords.longitude\r\n                    }\r\n                });\r\n            },\r\n            // this will set the state to false when the request for location is block/or denied\r\n            (error) => {\r\n                this.setState({allowLocation: \"false\"});\r\n            }\r\n\r\n            );\r\n        } \r\n    }\r\n\r\n    // componentDidUpdate () {\r\n    //     document.querySelector(\".map\").style.width = \"50%\";\r\n    //     document.querySelector(\".map\").style.height = \"95%\";\r\n    // }\r\n\r\n}\r\n \r\nexport default GoogleApiWrapper({\r\n  apiKey: (\"AIzaSyDKABHgdY2tt-ny_J2y6tG7rPAPZ853Ss4\")\r\n})(MapContainer)"]},"metadata":{},"sourceType":"module"}